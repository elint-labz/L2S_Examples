#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>
#define number_of_74hc595s 3
#define numOfRegisterPins number_of_74hc595s*8
boolean registers[numOfRegisterPins];
char command[17]={'d','i'};
int SER_Pin=A1;
int RCLK_Pin=6;
int SRCLK_Pin = 5;
Adafruit_PCD8544 display = Adafruit_PCD8544(8, 9, 10, 12, 11);
const byte bulb3off[] PROGMEM = {88,48,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000001,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000111,B11100011,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00011111,B00000111,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00111100,B00111111,B11111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B01111000,B11111111,B11111111,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B11110001,B11111111,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B11100011,B11111111,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000001,B11100011,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000001,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000001,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000001,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000001,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B11111111,B11111111,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B11111111,B11111111,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00111111,B11111111,B11111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00011111,B11111111,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000111,B11111111,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000011,B11111111,B11111111,B11111110,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B01111111,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00011111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B01111111,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B01111111,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00011111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B01111111,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00011111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000011,B11111110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B11111000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
};
const byte bulb3[] PROGMEM = {88,48,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00100000,B00000000,B00000000,B01110000,B00000000,B00000000,B00100000,B00000000,B00000000,B00000000,
B00000000,B01111000,B00000000,B00000000,B00000000,B00000000,B00000000,B11110000,B00000000,B00000000,B00000000,
B00000000,B00111110,B00000000,B00000000,B00000000,B00000000,B00000011,B11100000,B00000000,B00000000,B00000000,
B00000000,B00011111,B10000000,B00000000,B00000000,B00000000,B00001111,B10000000,B00000000,B00000000,B00000000,
B00000000,B00000111,B11000000,B00000000,B01110000,B00000000,B00011111,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000001,B10000000,B00111111,B11111111,B11100000,B00001100,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000001,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000111,B11100011,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00011111,B00000111,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00111100,B00111111,B11111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B01111000,B11111111,B11111111,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B11110001,B11111111,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B11100011,B11111111,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000001,B11100011,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,
B11111111,B11000001,B11111111,B11111111,B11111111,B11111111,B11111100,B00011111,B11111100,B00000000,B00000000,
B11111111,B11000001,B11111111,B11111111,B11111111,B11111111,B11111100,B00011111,B11111100,B00000000,B00000000,
B00000000,B00000001,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000001,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B11111111,B11111111,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B11111111,B11111111,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00111111,B11111111,B11111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00011111,B11111111,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000111,B11111111,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000011,B11111111,B11111111,B11111110,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000011,B11000000,B11111111,B11111111,B11111000,B00011110,B00000000,B00000000,B00000000,B00000000,
B00000000,B00001111,B10000000,B01111111,B11111111,B11110000,B00001111,B10000000,B00000000,B00000000,B00000000,
B00000000,B00111110,B00000000,B00111111,B11111111,B11100000,B00000111,B11100000,B00000000,B00000000,B00000000,
B00000000,B01111100,B00000000,B00111111,B11111111,B11100000,B00000001,B11110000,B00000000,B00000000,B00000000,
B00000000,B00110000,B00000000,B00011111,B11111111,B11000000,B00000000,B01100000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B01111111,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B01111111,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00011111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B01111111,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00011111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000011,B11111110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B11111000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
};
const byte paired[] PROGMEM = {88,48,
B00000000,B00000000,B00000000,B00000000,B00000000,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000001,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B10000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000001,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11111110,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11111111,B10000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111000,B11111111,B11100000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111000,B00111111,B11111000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111100,B00001111,B11111110,B00000000,B00000000,B00000000,
B00000000,B00000000,B00011110,B00000000,B00000011,B11111000,B00000011,B11111111,B10000000,B00000000,B00000000,
B00000000,B00000000,B00111111,B10000000,B00000011,B11111100,B00000000,B01111111,B11000000,B00000000,B00000000,
B00000000,B00000000,B00111111,B11100000,B00000011,B11111000,B00000000,B01111111,B11000000,B00000000,B00000000,
B00000000,B00000000,B00011111,B11111000,B00000011,B11111100,B00000001,B11111111,B10000000,B00000000,B00000000,
B00000000,B00000000,B00001111,B11111100,B00000001,B11111000,B00000011,B11111111,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000011,B11111111,B00000000,B11110000,B00001111,B11111100,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B11111111,B11000000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00111111,B11110000,B00000000,B11111111,B11000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00011111,B11111000,B00000001,B11111111,B10000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000111,B11111110,B00000111,B11111110,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000001,B11111111,B10011111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B01111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00001111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00001111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B01111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000001,B11111111,B10011111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000111,B11111110,B00000111,B11111110,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00011111,B11111000,B00000001,B11111111,B10000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00111111,B11110000,B00000000,B11111111,B11000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B11111111,B11000000,B00000000,B00111111,B11110000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000011,B11111111,B00000000,B11110000,B00001111,B11111100,B00000000,B00000000,B00000000,
B00000000,B00000000,B00001111,B11111100,B00000001,B11111000,B00000011,B11111111,B00000000,B00000000,B00000000,
B00000000,B00000000,B00011111,B11111000,B00000011,B11111100,B00000001,B11111111,B10000000,B00000000,B00000000,
B00000000,B00000000,B00111111,B11100000,B00000011,B11111100,B00000000,B01111111,B11000000,B00000000,B00000000,
B00000000,B00000000,B00111111,B10000000,B00000011,B11111000,B00000000,B01111111,B11000000,B00000000,B00000000,
B00000000,B00000000,B00011110,B00000000,B00000011,B11111100,B00000011,B11111111,B10000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111000,B00001111,B11111110,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111100,B00111111,B11111000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111000,B11111111,B11100000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11111111,B10000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11111110,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B10000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000001,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,
};
const byte unpaired[] PROGMEM = {88,48,
B00000000,B00000000,B00000001,B11111000,B00000000,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000001,B11111100,B00000001,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B11111100,B00000011,B11111111,B10000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B01111110,B00000001,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B01111111,B00000011,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00111111,B10000011,B11111111,B11111110,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00011111,B11000011,B11111111,B11111111,B10000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00001111,B11000011,B11111000,B11111111,B11100000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000111,B11100011,B11111000,B00111111,B11111000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000111,B11110011,B11111100,B00001111,B11111110,B00000000,B00000000,B00000000,
B00000000,B00000000,B00011110,B00000011,B11111011,B11111000,B00000011,B11111111,B10000000,B00000000,B00000000,
B00000000,B00000000,B00111111,B10000001,B11111111,B11111100,B00000000,B01111111,B11000000,B00000000,B00000000,
B00000000,B00000000,B00111111,B11100000,B11111111,B11111000,B00000000,B01111111,B11000000,B00000000,B00000000,
B00000000,B00000000,B00011111,B11111000,B01111111,B11111100,B00000001,B11111111,B10000000,B00000000,B00000000,
B00000000,B00000000,B00001111,B11111100,B00111111,B11111000,B00000011,B11111111,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000011,B11111111,B00111111,B11110000,B00001111,B11111100,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B11111111,B11011111,B11000000,B00111111,B11110000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00111111,B11111111,B11000000,B11111111,B11000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00011111,B11111111,B11100001,B11111111,B10000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000111,B11111111,B11110111,B11111110,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000001,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B01111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00001111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00001111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B01111111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000001,B11111111,B10011111,B11111000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000111,B11111110,B00000111,B11111110,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00011111,B11111000,B00000011,B11111111,B10000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00111111,B11110000,B00000011,B11111111,B11000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B11111111,B11000000,B00000001,B11111111,B11110000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000011,B11111111,B00000000,B11110000,B11111111,B11111100,B00000000,B00000000,B00000000,
B00000000,B00000000,B00001111,B11111100,B00000001,B11111000,B01111111,B11111111,B00000000,B00000000,B00000000,
B00000000,B00000000,B00011111,B11111000,B00000011,B11111100,B00111111,B11111111,B10000000,B00000000,B00000000,
B00000000,B00000000,B00111111,B11100000,B00000011,B11111100,B00111111,B11111111,B11000000,B00000000,B00000000,
B00000000,B00000000,B00111111,B10000000,B00000011,B11111000,B00011111,B11111111,B11000000,B00000000,B00000000,
B00000000,B00000000,B00011110,B00000000,B00000011,B11111100,B00001111,B11111111,B10000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111000,B00001111,B11111110,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111100,B00111111,B11111000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111000,B11111111,B11111000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11111110,B11111110,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11111000,B01111110,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11100000,B00111111,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B10000000,B00111111,B10000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000001,B11111100,B00000000,B00011111,B10000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B11110000,B00000000,B00001111,B10000000,B00000000,B00000000,
};
const byte logo_el[] PROGMEM = {16,10,
B00000000,B00000000,
B11111010,B00000000,
B11111010,B00000000,
B00000010,B00000000,
B11111010,B00000000,
B11111010,B00000000,
B00000010,B00000000,
B11111011,B11000000,
B11111011,B11000000,
B00000000,B00000000,
};


void setup()
{
  pinMode(SER_Pin,OUTPUT);
  pinMode(RCLK_Pin,OUTPUT);
  pinMode(SRCLK_Pin,OUTPUT);
  clearRegisters();
  writeRegisters();
  display.begin();
  Serial.begin(9600);
  display.begin();
  display.setContrast(50);
  display.clearDisplay();
  pinMode(A4,OUTPUT);
  display_El_logo();
  display_L2S();
  display_title();
  display.drawBitmap(70,35,logo_el,10,10,BLACK);
  display.drawRect(0,0,84,48,BLACK);     
}
void loop()
{ 
  int  i=0;
    while(Serial.available())                    
     {
       command[i] = Serial.read();   // read the most recent byte and place it in a particular array position
       i++;                          // increment the value of i (ie, i = i+1)
       delay(10);
     }
    if(command[0]=='d' && command[1]=='i')
    {
        display.clearDisplay();
        display.setCursor(2,40);
         display.drawBitmap(0,0,unpaired,84,48,BLACK);
    display.println("UNPAIRED");
      display.display();
    }
    if(command[0]=='c' && command[1]=='o')
    {
      
            display.clearDisplay();
      display.setCursor(2,18);
      display.println("PAIRED");
      display.drawBitmap(0,0,paired,84,48,BLACK);
      display.display();
    }
   if(command[0]=='O' && command[1]=='N')
   {
     display.clearDisplay();
    digitalWrite(A4,HIGH);
    display.setCursor(1, 30);
    display.println("BULB");
    display.print("ON");
    display.drawBitmap(0,0,bulb3,84,48,BLACK);
    display.setTextSize(1);
    display.setTextColor(BLACK);
    display.display();
   }
   
   if(command[0]=='O' && command[1]=='F')
   {
    display.clearDisplay();
    digitalWrite(A4,LOW);
    display.setCursor(1,30);
    display.println("BULB");
    display.print("OFF");
    display.drawBitmap(0,0,bulb3off,84,48,BLACK);
    display.setTextSize(1);
    display.setTextColor(BLACK);
    display.display();
   }
}

//**********************************clear bargraph****************************//
void clearRegisters(){
  for(int i = numOfRegisterPins - 1; i >=  0; i--){
     registers[i] = LOW;
  }
  writeRegisters();
} 

void writeRegisters(){

  digitalWrite(RCLK_Pin, LOW);

  for(int i = numOfRegisterPins - 1; i >=  0; i--){
    digitalWrite(SRCLK_Pin, LOW);

    int val = registers[i];

    digitalWrite(SER_Pin, val);
    digitalWrite(SRCLK_Pin, HIGH);

  }
  digitalWrite(RCLK_Pin, HIGH);

}



//*****************************Elintz lab Logic*******************************//
void display_El_logo()
{
   display.fillRect(15,2,21,6,BLACK);
   display.fillRect(15,12,21,6,BLACK);
   display.fillRect(15,22,21,6,BLACK);
   display.fillRect(45,2,6,26,BLACK);
   display.fillRect(50,22,18,6,BLACK);
   display.setCursor(15,35);
   display.print("ElintLabz");
   display.display();
   delay(5000);
   display.clearDisplay();
}

//*************************************L2S***************************************//
void display_L2S()
{
  display.drawRect(0, 0, 84 , 48,BLACK);
  display.setCursor(26, 10);
  display.println("LEARN");
  display.setCursor(38,20);
  display.println("2");
  display.setCursor(22,30);
  display.println("SOLDER");
  display.display(); 
  delay(5000);
  display.clearDisplay();
}

//****************************************Tittle**********************************//
void display_title()
{
  display.drawRect(0, 0, 84 , 48,BLACK);
  display.setCursor(2,12);
  display.println("WIRELESS");
  display.setCursor(2,22);
  display.println("CONTROL OF");
  display.setCursor(2,32);
  display.println("BULB");
  display.drawBitmap(70,35,logo_el,10,10,BLACK);
  display.display(); 
  delay(5000);
  display.clearDisplay();
}
